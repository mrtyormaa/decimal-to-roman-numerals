apiVersion: apps/v1
kind: Deployment
metadata:
  name: roman-numerals-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: roman-numerals
  template:
    metadata:
      labels:
        app: roman-numerals
    spec:
      containers:
      - name: roman-numerals
        image: your-docker-repo/decimal-to-roman-numerals:latest
        ports:
        - containerPort: 8001
        command: ["./bin/main"]

---
apiVersion: v1
kind: Service
metadata:
  name: roman-numerals-service
spec:
  type: LoadBalancer
  selector:
    app: roman-numerals
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8001

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.3
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s
      evaluation_interval: 5s

    alerting:

    rule_files:

    scrape_configs:
    - job_name: roman-numerals
      static_configs:
      - targets: ["roman-numerals-service:80"]

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.2.4
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
          subPath: datasources.yaml
        - name: dashboards-volume
          mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
          subPath: dashboards.yaml
        - name: dashboards-config
          mountPath: /var/lib/grafana/dashboards
      volumes:
      - name: config-volume
        configMap:
          name: grafana-config
      - name: dashboards-volume
        configMap:
          name: grafana-dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  datasources.yaml: |
    apiVersion: 1

    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus-service:9090
      basicAuth: false
      isDefault: true
      uid: prometheusdatasource

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  dashboards.yaml: |
    apiVersion: 1

    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: LoadBalancer
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
